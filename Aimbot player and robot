local P = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local Cam = workspace.CurrentCamera
local aiming = false
local conn = nil

UIS.InputBegan:Connect(function(i,g)
    if not g and i.KeyCode == Enum.KeyCode.E then
        aiming = not aiming
        if aiming then
            local head = nil
            local best = math.huge
            local center = Vector2.new(Cam.ViewportSize.X/2, Cam.ViewportSize.Y/2)
            
            for _,v in pairs(workspace:GetDescendants()) do
                if v:IsA("BasePart") and v.Name == "Head" and v.Parent ~= P.Character then
                    local hum = v.Parent:FindFirstChildOfClass("Humanoid")
                    if hum and hum.Health > 0 then
                        local pos,vis = Cam:WorldToViewportPoint(v.Position)
                        if vis then
                            local dist = (Vector2.new(pos.X,pos.Y)-center).Magnitude
                            if dist < best then
                                best = dist
                                head = v
                            end
                        end
                    end
                end
            end
            
            if head then
                conn = RS.RenderStepped:Connect(function()
                    if not head or not head.Parent then
                        aiming = false
                        if conn then conn:Disconnect() end
                        return
                    end
                    Cam.CFrame = Cam.CFrame:Lerp(CFrame.new(Cam.CFrame.Position, head.Position), 0.8)
                end)
            else
                aiming = false
            end
        elseif conn then
            conn:Disconnect()
        end
    end
end)

P.CharacterAdded:Connect(function()
    if conn then conn:Disconnect() end
    aiming = false
end)
